{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/token.service\";\nimport * as i3 from \"@angular/common\";\nfunction LogoAPComponent_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function LogoAPComponent_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.login());\n    });\n    i0.ɵɵtext(1, \" Ingreso \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LogoAPComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function LogoAPComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onLogOut());\n    });\n    i0.ɵɵtext(1, \" Cerrar session \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LogoAPComponent {\n  constructor(router, tokenService) {\n    this.router = router;\n    this.tokenService = tokenService;\n    this.isLogged = false;\n  }\n  login() {\n    this.router.navigate(['/login']);\n  }\n  ngOnInit() {\n    if (this.tokenService.getToken()) {\n      this.isLogged = true;\n    } else {\n      this.isLogged = false;\n    }\n  }\n  onLogOut() {\n    this.tokenService.logOut();\n    window.location.reload();\n  }\n}\nLogoAPComponent.ɵfac = function LogoAPComponent_Factory(t) {\n  return new (t || LogoAPComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.TokenService));\n};\nLogoAPComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LogoAPComponent,\n  selectors: [[\"app-logo-ap\"]],\n  decls: 18,\n  vars: 2,\n  consts: [[1, \"row\"], [1, \"container\", \"d-flex\", \"flex-column\", \"flex-md-row\", \"justify-content-between\", \"align-items-center\"], [1, \"logo\"], [\"id\", \"logoAP\", \"src\", \"../../../assets/APLogo.png\", \"alt\", \"\"], [1, \"redes\", \"flex-column\", \"flex-md-row\", \"align-items-center\"], [\"href\", \"\"], [\"src\", \"../../../assets/facebook.png\", \"alt\", \"\"], [\"src\", \"../../../assets/instagram.png\", \"alt\", \"\"], [\"src\", \"../../../assets/twitter.png\", \"alt\", \"\"], [\"src\", \"../../../assets/linkedin.png\", \"alt\", \"\"], [\"src\", \"../../../assets/github.png\", \"alt\", \"\"], [\"class\", \"btn btn-outline-light\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-outline-light\", 3, \"click\"]],\n  template: function LogoAPComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"img\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\")(6, \"a\", 5);\n      i0.ɵɵelement(7, \"img\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"a\", 5);\n      i0.ɵɵelement(9, \"img\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"a\", 5);\n      i0.ɵɵelement(11, \"img\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"a\", 5);\n      i0.ɵɵelement(13, \"img\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"a\", 5);\n      i0.ɵɵelement(15, \"img\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, LogoAPComponent_button_16_Template, 2, 0, \"button\", 11);\n      i0.ɵɵtemplate(17, LogoAPComponent_button_17_Template, 2, 0, \"button\", 11);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLogged);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLogged);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\".row[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nimg[_ngcontent-%COMP%] {\\r\\n  width: 50px;\\r\\n}\\r\\n\\r\\n#logoAP[_ngcontent-%COMP%] {\\r\\n  width: 150px;\\r\\n}\\r\\n\\r\\n.redes[_ngcontent-%COMP%] {\\r\\n  margin-right: 0.5em;\\r\\n}\\r\\n\\r\\n.redes[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\r\\n  margin: 0.2em;\\r\\n}\\r\\n\\r\\n.btn[_ngcontent-%COMP%] {\\r\\n  border-width: medium;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dvLWFwL2xvZ28tYXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLG9CQUFvQjtBQUN0QiIsInNvdXJjZXNDb250ZW50IjpbIi5yb3cge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5pbWcge1xyXG4gIHdpZHRoOiA1MHB4O1xyXG59XHJcblxyXG4jbG9nb0FQIHtcclxuICB3aWR0aDogMTUwcHg7XHJcbn1cclxuXHJcbi5yZWRlcyB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcclxufVxyXG5cclxuLnJlZGVzIGltZyB7XHJcbiAgbWFyZ2luOiAwLjJlbTtcclxufVxyXG5cclxuLmJ0biB7XHJcbiAgYm9yZGVyLXdpZHRoOiBtZWRpdW07XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAcQA,kCAIC;IAFCA;MAAAA;MAAA;MAAA,OAASA,6BAAO;IAAA,EAAC;IAGjBA,yBACF;IAAAA,iBAAS;;;;;;IACTA,kCAIC;IAFCA;MAAAA;MAAA;MAAA,OAASA,gCAAU;IAAA,EAAC;IAGpBA,gCACF;IAAAA,iBAAS;;;AClBjB,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,MAAc,EAAUC,YAA0B;IAAlD,WAAM,GAAND,MAAM;IAAkB,iBAAY,GAAZC,YAAY;IAFxD,aAAQ,GAAG,KAAK;EAEyD;EAEzEC,KAAK;IACH,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACH,YAAY,CAACI,QAAQ,EAAE,EAAE;MAChC,IAAI,CAACC,QAAQ,GAAG,IAAI;KACrB,MAAM;MACL,IAAI,CAACA,QAAQ,GAAG,KAAK;;EAEzB;EAEAC,QAAQ;IACN,IAAI,CAACN,YAAY,CAACO,MAAM,EAAE;IAC1BC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;;AApBWb,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT5BnB,8BAAiB;MAKXA,yBAA2D;MAC7DA,iBAAM;MACNA,8BAA8D;MAE/CA,yBAAiD;MAAAA,iBAAI;MAChEA,4BAAW;MAAAA,yBAAkD;MAAAA,iBAAI;MACjEA,6BAAW;MAAAA,0BAAgD;MAAAA,iBAAI;MAC/DA,6BAAW;MAAAA,0BAAiD;MAAAA,iBAAI;MAChEA,6BAAW;MAAAA,2BAA+C;MAAAA,iBAAI;MAC9DA,yEAMS;MACTA,yEAMS;MACXA,iBAAM;;;MAXDA,gBAAe;MAAfA,oCAAe;MAOfA,eAAc;MAAdA,mCAAc","names":["i0","LogoAPComponent","constructor","router","tokenService","login","navigate","ngOnInit","getToken","isLogged","onLogOut","logOut","window","location","reload","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Nicolas Koch\\Documents\\GitHub\\ProyectoIntegrador_NicolasWalterKoch\\Frontend\\src\\app\\components\\logo-ap\\logo-ap.component.html","C:\\Users\\Nicolas Koch\\Documents\\GitHub\\ProyectoIntegrador_NicolasWalterKoch\\Frontend\\src\\app\\components\\logo-ap\\logo-ap.component.ts"],"sourcesContent":["<div class=\"row\">\n  <div\n    class=\"container d-flex flex-column flex-md-row justify-content-between align-items-center\"\n  >\n    <div class=\"logo\">\n      <img id=\"logoAP\" src=\"../../../assets/APLogo.png\" alt=\"\" />\n    </div>\n    <div class=\"redes flex-column flex-md-row align-items-center\">\n      <div>\n        <a href=\"\"><img src=\"../../../assets/facebook.png\" alt=\"\" /></a>\n        <a href=\"\"><img src=\"../../../assets/instagram.png\" alt=\"\" /></a>\n        <a href=\"\"><img src=\"../../../assets/twitter.png\" alt=\"\" /></a>\n        <a href=\"\"><img src=\"../../../assets/linkedin.png\" alt=\"\" /></a>\n        <a href=\"\"><img src=\"../../../assets/github.png\" alt=\"\" /></a>\n        <button\n          class=\"btn btn-outline-light\"\n          (click)=\"login()\"\n          *ngIf=\"!isLogged\"\n        >\n          Ingreso\n        </button>\n        <button\n          class=\"btn btn-outline-light\"\n          (click)=\"onLogOut()\"\n          *ngIf=\"isLogged\"\n        >\n          Cerrar session\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-logo-ap',\n  templateUrl: './logo-ap.component.html',\n  styleUrls: ['./logo-ap.component.css'],\n})\nexport class LogoAPComponent {\n  isLogged = false;\n\n  constructor(private router: Router, private tokenService: TokenService) {}\n\n  login() {\n    this.router.navigate(['/login']);\n  }\n\n  ngOnInit(): void {\n    if (this.tokenService.getToken()) {\n      this.isLogged = true;\n    } else {\n      this.isLogged = false;\n    }\n  }\n\n  onLogOut(): void {\n    this.tokenService.logOut();\n    window.location.reload();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}